# -*- coding: utf-8 -*-

import google.generativeai as genai
import os
import textwrap # Για καλύτερη μορφοποίηση της εξόδου

# --- Ρυθμίσεις API ---
# ΠΡΟΣΟΧΗ: Ασφαλίστε το API Key σας!
# Μπορείτε να το βάλετε ως μεταβλητή περιβάλλοντος ή να το ζητάτε κατά την εκτέλεση.
# Για αυτό το παράδειγμα, θα το ζητήσουμε κατά την εκτέλεση για λόγους επίδειξης.
# Αν το αποθηκεύσετε ως μεταβλητή περιβάλλοντος (π.χ. GOOGLE_API_KEY),
# μπορείτε να το φορτώσετε με: os.getenv('GOOGLE_API_KEY')

# --- Εισαγωγή API Key από τον χρήστη ---
api_key = input("Παρακαλώ εισάγετε το Google Gemini API Key σας: ")
genai.configure(api_key=api_key)

# --- Επιλογή του μοντέλου ---
# Μπορείτε να επιλέξετε ένα μοντέλο που είναι κατάλληλο για δημιουργία κειμένου.
# Ελέγξτε τη διαθεσιμότητα και τις προδιαγραφές στην τεκμηρίωση του Gemini API.
# Χρησιμοποιούμε ένα γενικό μοντέλο κειμένου εδώ.
model = genai.GenerativeModel('gemini-1.5-flash-latest') # Μπορείτε να αλλάξετε το μοντέλο αν χρειάζεται

print("\n--- Δημιουργία Τμήματος Διδακτικού Σεναρίου με AI ---")

# --- Είσοδος από τον χρήστη: Το θέμα του μαθήματος στην Python 2.7 ---
thema = input("Εισάγετε το συγκεκριμένο θέμα της Python 2.7 που θέλετε να διδάξετε (π.χ. 'Βρόχος for και lists', 'Εντολές print και raw_input', 'Δομές Επιλογής if/elif/else'): ")
taksi = input("Εισάγετε την τάξη ή το επίπεδο των μαθητών (π.χ. 'Μαθητές Γυμνασίου', 'Αρχάριοι ενήλικες'): ")
diarkeia_epithymiti = input("Εισάγετε την επιθυμητή εκτιμώμενη διάρκεια σε ώρες ή διδακτικές ώρες (π.χ. '2 διδακτικές ώρες'): ")


# --- Κατασκευή του Prompt για το LLM ---
# Ζητάμε από την AI να παράγει περιεχόμενο για κάθε ενότητα, λαμβάνοντας υπόψη την Python 2.7.
prompt = textwrap.dedent(f"""
Παράγει περιεχόμενο για ένα τμήμα διδακτικού σεναρίου με βάση τις παρακάτω ενότητες.
Το σενάριο προορίζεται για {taksi} που ξεκινούν να μαθαίνουν **Python 2.7**.
Το θέμα του μαθήματος είναι: "{thema}".
Η εκτιμώμενη διάρκεια είναι: {diarkeia_epithymiti}.

Παράγει περιεχόμενο για τις εξής ενότητες, χρησιμοποιώντας σαφείς επικεφαλίδες για καθεμία:

1.  **Τίτλος του διδακτικού σεναρίου**: Ένας περιγραφικός τίτλος για το μάθημα "{thema}" στην Python 2.7.
2.  **Εκτιμώμενη διάρκεια**: Αναφέρε την επιθυμητή διάρκεια: {diarkeia_epithymiti}.
3.  **Σκοπός και στόχοι του σεναρίου**:
    * Σκοπός: Ένας γενικός σκοπός.
    * Στόχοι (Γνωστικοί, Δεξιοτήτων, Στάσεων/Συμπεριφορών): Διατύπωσε συγκεκριμένους, μετρήσιμους στόχους χρησιμοποιώντας ρήματα δράσης, ειδικά για την εκμάθηση του "{thema}" στην Python 2.7 από αρχάριους.
4.  **Προαπαιτούμενες γνώσεις των μαθητών**: Τι υποτίθεται ότι γνωρίζουν ήδη οι αρχάριοι προγραμματιστές πριν από αυτό το μάθημα.
5.  **Συσχετισμός με το Αναλυτικό Πρόγραμμα**: Γενικός συσχετισμός με ένα τυπικό πρόγραμμα σπουδών Πληροφορικής/Προγραμματισμού για αρχάριους.
6.  **Διδακτικές προσεγγίσεις και στρατηγικές/Θεωρίες μάθησης**: Περιγράψτε εν συντομία ποιες παιδαγωγικές προσεγγίσεις είναι κατάλληλες για τη διδασκαλία αυτού του θέματος σε αρχάριους (π.χ. εποικοδομητισμός, συνεργατική μάθηση) και πώς θα μπορούσαν να εφαρμοστούν.
7.  **Περιγραφή των δραστηριοτήτων του σεναρίου**: Περιγράψτε τα βασικά βήματα και τις δραστηριότητες που θα γίνουν στην τάξη για να επιτευχθούν οι στόχοι. Εστίασε στις ενέργειες των μαθητών και του εκπαιδευτικού. Λάβε υπόψη ότι διδάσκεται Python 2.7.
8.  **Πρόταση για Φύλλο Εργασίας (για 45 λεπτά)**: Δώσε μια ιδέα ή περίγραψε ασκήσεις και ερωτήσεις για ένα φύλλο εργασίας 45 λεπτών σχετικά με το θέμα "{thema}" σε Python 2.7. Δώσε παραδείγματα τύπων ασκήσεων.
9.  **Προτεινόμενη Βιβλιογραφία / Αναφορές**: Δώσε παραδείγματα τύπων πηγών ή γενικές αναφορές σχετικές με τη διδασκαλία Python 2.7 σε αρχάριους.

Χρησιμοποίησε ελληνική γλώσσα. Δομήστε την απάντηση με τις επικεφαλίδες που ζητήθηκαν.
""")

# --- Κλήση του LLM ---
print(f"\nΕπικοινωνία με την AI για τη δημιουργία περιεχομένου για το θέμα '{thema}' στην Python 2.7...")

try:
    response = model.generate_content(prompt)
    generated_content = response.text
    print("Το περιεχόμενο δημιουργήθηκε επιτυχώς.")

    # --- Εκτύπωση του παραγόμενου σεναρίου ---
    print("\n" + "="*60)
    print("--- ΠΑΡΑΓΟΜΕΝΟ ΤΜΗΜΑ ΔΙΔΑΚΤΙΚΟΥ ΣΕΝΑΡΙΟΥ ---")
    print("="*60)
    print(generated_content)
    print("="*60)
    print("--- Τέλος Παραγόμενου Τμήματος ---")
    print("Σημείωση: Ελέγξτε προσεκτικά το παραγόμενο περιεχόμενο και προσαρμόστε το στις ανάγκες σας.")
    print("Ειδικά για την Python 2.7, βεβαιωθείτε ότι οι αναφορές και τα παραδείγματα κώδικα είναι σωστά για αυτή την έκδοση.")

except Exception as e:
    print(f"\nΠαρουσιάστηκε σφάλμα κατά την επικοινωνία με την AI: {e}")
    print("Βεβαιωθείτε ότι το API Key είναι σωστό, ότι έχετε σύνδεση στο internet και ότι το μοντέλο είναι διαθέσιμο.")